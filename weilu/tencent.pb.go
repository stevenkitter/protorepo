// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weilu/tencent.proto

package weilu // import "github.com/stevenkitter/protorepo/weilu"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import base "github.com/stevenkitter/protorepo/base"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WXAuthRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WXAuthRequest) Reset()         { *m = WXAuthRequest{} }
func (m *WXAuthRequest) String() string { return proto.CompactTextString(m) }
func (*WXAuthRequest) ProtoMessage()    {}
func (*WXAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tencent_d1d3ece89a82e763, []int{0}
}
func (m *WXAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WXAuthRequest.Unmarshal(m, b)
}
func (m *WXAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WXAuthRequest.Marshal(b, m, deterministic)
}
func (dst *WXAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WXAuthRequest.Merge(dst, src)
}
func (m *WXAuthRequest) XXX_Size() int {
	return xxx_messageInfo_WXAuthRequest.Size(m)
}
func (m *WXAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WXAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WXAuthRequest proto.InternalMessageInfo

func (m *WXAuthRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WXAuthResp struct {
	Resp                 *base.Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WXAuthResp) Reset()         { *m = WXAuthResp{} }
func (m *WXAuthResp) String() string { return proto.CompactTextString(m) }
func (*WXAuthResp) ProtoMessage()    {}
func (*WXAuthResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_tencent_d1d3ece89a82e763, []int{1}
}
func (m *WXAuthResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WXAuthResp.Unmarshal(m, b)
}
func (m *WXAuthResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WXAuthResp.Marshal(b, m, deterministic)
}
func (dst *WXAuthResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WXAuthResp.Merge(dst, src)
}
func (m *WXAuthResp) XXX_Size() int {
	return xxx_messageInfo_WXAuthResp.Size(m)
}
func (m *WXAuthResp) XXX_DiscardUnknown() {
	xxx_messageInfo_WXAuthResp.DiscardUnknown(m)
}

var xxx_messageInfo_WXAuthResp proto.InternalMessageInfo

func (m *WXAuthResp) GetResp() *base.Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func init() {
	proto.RegisterType((*WXAuthRequest)(nil), "weilu.WXAuthRequest")
	proto.RegisterType((*WXAuthResp)(nil), "weilu.WXAuthResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WxAuthServiceClient is the client API for WxAuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WxAuthServiceClient interface {
	RequestWxAuth(ctx context.Context, in *WXAuthRequest, opts ...grpc.CallOption) (*WXAuthResp, error)
}

type wxAuthServiceClient struct {
	cc *grpc.ClientConn
}

func NewWxAuthServiceClient(cc *grpc.ClientConn) WxAuthServiceClient {
	return &wxAuthServiceClient{cc}
}

func (c *wxAuthServiceClient) RequestWxAuth(ctx context.Context, in *WXAuthRequest, opts ...grpc.CallOption) (*WXAuthResp, error) {
	out := new(WXAuthResp)
	err := c.cc.Invoke(ctx, "/weilu.WxAuthService/RequestWxAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WxAuthServiceServer is the server API for WxAuthService service.
type WxAuthServiceServer interface {
	RequestWxAuth(context.Context, *WXAuthRequest) (*WXAuthResp, error)
}

func RegisterWxAuthServiceServer(s *grpc.Server, srv WxAuthServiceServer) {
	s.RegisterService(&_WxAuthService_serviceDesc, srv)
}

func _WxAuthService_RequestWxAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WXAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WxAuthServiceServer).RequestWxAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weilu.WxAuthService/RequestWxAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WxAuthServiceServer).RequestWxAuth(ctx, req.(*WXAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WxAuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "weilu.WxAuthService",
	HandlerType: (*WxAuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestWxAuth",
			Handler:    _WxAuthService_RequestWxAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "weilu/tencent.proto",
}

func init() { proto.RegisterFile("weilu/tencent.proto", fileDescriptor_tencent_d1d3ece89a82e763) }

var fileDescriptor_tencent_d1d3ece89a82e763 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x4f, 0xcd, 0xcc,
	0x29, 0xd5, 0x2f, 0x49, 0xcd, 0x4b, 0x4e, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x05, 0x0b, 0x4a, 0xf1, 0x27, 0x25, 0x16, 0xa7, 0xea, 0x83, 0x08, 0x88, 0xb8, 0x92, 0x32,
	0x17, 0x6f, 0x78, 0x84, 0x63, 0x69, 0x49, 0x46, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90,
	0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad,
	0xa4, 0xc3, 0xc5, 0x05, 0x53, 0x54, 0x5c, 0x20, 0x24, 0xc7, 0xc5, 0x52, 0x94, 0x5a, 0x5c, 0x00,
	0x56, 0xc1, 0x6d, 0xc4, 0xa5, 0x07, 0x36, 0x0d, 0x24, 0x13, 0x04, 0x16, 0x37, 0xf2, 0xe4, 0xe2,
	0x0d, 0xaf, 0x00, 0xa9, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xb2, 0xe0, 0xe2, 0x85,
	0x9a, 0x0e, 0x11, 0x17, 0x12, 0xd1, 0x03, 0xbb, 0x46, 0x0f, 0xc5, 0x66, 0x29, 0x41, 0x34, 0xd1,
	0xe2, 0x02, 0x27, 0xcd, 0x28, 0xf5, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c,
	0xfd, 0xe2, 0x92, 0xd4, 0xb2, 0xd4, 0xbc, 0xec, 0xcc, 0x92, 0x92, 0xd4, 0x22, 0x7d, 0xb0, 0xf3,
	0x8b, 0x52, 0x0b, 0xf2, 0xf5, 0xc1, 0xba, 0x92, 0xd8, 0xc0, 0x02, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x59, 0xb7, 0xea, 0xc5, 0xfe, 0x00, 0x00, 0x00,
}
